<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                            "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 	<!-- 
 		为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成:包名+sql映射文件名，这样就能够保证namespace的值是唯一的
  		例如namespace="cn.my.dao.userMapper"就是cn.my.dao(包名)+userMapper(userMapper.java文件去除后缀)
   	-->
  <mapper namespace="com.example.demo.mapper.UserMapper">
  
     <!-- 自己定义一个  resultMap ，  数据返回的结果集就可以直接填写这个 resultMap的ID-->
     <!--  
     <resultMap type="com.my.bean.User" id="BaseResultMap" >
        <id column="id" property="id" jdbcType="BIGINT"></id>
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
    </resultMap>
     -->
     
     <!-- 
       	  根据id查询得到一个user对象
       	 1.在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
       	 2.使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
      	 3.resultType= "cn.my.bean.User" 就表示将查询结果封装成一个User类的对象返回 。User类就是user表所对应的实体类
      -->
     <select id="getUser" parameterType="int"   resultType="com.example.demo.bean.User" >
         select * from user where id=#{id}
     </select>
     
     
     <!-- 使用自定义的   resultType   -->
     <select id="findAll" resultType="com.example.demo.bean.User">
     	select * from user
     </select>
     
     

     <select  id="selectByid"  resultType="com.example.demo.bean.User" >
     	select * from user where id= #{id}
     </select>
     
     
     <insert id="saveOneUser" useGeneratedKeys="true"  keyProperty="id"  keyColumn="id"   >
     	insert into user(name,username) values(#{name},#{username})
     </insert>
     
     
     <update id="updateUser" parameterType="com.example.demo.bean.User">
     	update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
     	
     </update>





    <!--          *********************    经      销     商                                -->





    <select id="exsisUser" parameterType="com.example.demo.bean.User"    resultType="com.example.demo.bean.User">
        select id, name,username ,address,phone1,parentID,state, role  from user where username = #{userName} and password = #{password}
    </select>

    <select id="findByState"   parameterType="java.lang.Integer" resultType="com.example.demo.bean.User">
        select * from user
                <if test="state > 0">
                    where state = #{state}
                </if>
    </select>


    <insert id="addUser" parameterType="com.example.demo.bean.User"   >
        insert into user( name,userName, password, phone1,phone2,address,createID,createTime)
               values(#{name}, #{userName}, #{password}, #{phone1}, #{phone2},#{address}, #{createID},#{createTime})
    </insert>

    <select id="userMneu"   parameterType="java.lang.Integer" resultType="com.example.demo.bean.MenuList" >
        select id ,menuid ,name ,url ,parentid,icon , jsaction  from menu where id in
        (select menuid from rolemenu where roleid=
        (select role from user where user.id=#{id}));


    </select>


</mapper>